 ---- URL -----
 https -> hyper text transfer protocol secure ://www.google.com -> domain name :/ path for pages

 protocol
 hypertext
 transfer
 protocol
 secure


--- HTTP METHODS ----
GET - retrieve data from a specified resource (getting the data from server)
POST - submit data to be processed to a specified resource (sending data to server)
PUT - update a specified resource (updating data on server)
DELETE - delete a specified resource (deleting data on server)
PATCH - update partial resources (updating data on server)

---- what is difference between PUT and PATCH? ----
PUT - update the whole resource
PATCH - update partial resource
example
PUT - update the whole user
PATCH - update only user's name

--- Express ---
it uses http only to bulid server
it only simplies creating the server we dont needs http or any other modules


---- express : ^4.18.6 ----
first part 4 is major version
second part 18 is minor version (recomended update / security fixes)
third part 6 is patch version (minor bug fixes) it is an optional update

^ symbol represnt it will keep as it is 4 it wwill only update the minor versions but it will nt do it to 15 versioining

~ symbol represnt it will keep as it is 4.18 it will only update the patch versions but it will nt do it to 18.6 versioining (last part)



---- Restful API ----
Representational State Transfer

---- Express Middlewares ----


--- HTTP Headers ---
Headers are used to provide information to both client and server

it has an extra info for the user so that we can send that data to the dbfrom the server
like login , username and all
HTTP headers are an important part of the API request and response as they represnt the meta-data associated with the api request adn response

Headers carry information for the request and response body


// we can send header
// we can set and get the headers that we are requesting from the server

// if we wants to create our own header then we append X-Myname in front of our header
// we have an custom headers major use while authothetification


----- HTTP Status Codes ----
100- 199 - Informational Response
200- 299 - Success Response
300- 399 - Redirection Response
400- 499 - Client Error Response
500- 599 - Server Error Response


---- MongoDb ----
 No SQL database documents based database

 strong suppoert for aggregation pipes -> aggregation pipes are used to process data records and return computed results

wokrs on BSON format -> BSON is a binary representation of JSON documents

Best fro node APPlication

Architecture of MongoDB
Database -> Collection -> Document -> Fields -> Values -> Binary JSON (BSON) -> JSON (JavaScript Object Notation)
